<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guo Xudong's Blog·郭旭东的博客 – Linux</title><link>https://guoxudong.io/tags/linux/</link><description>Recent content in Linux on Guo Xudong's Blog·郭旭东的博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Fri, 15 Mar 2019 09:53:02 +0800</lastBuildDate><atom:link href="https://guoxudong.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Post: Alpine Linux详解</title><link>https://guoxudong.io/post/alpine-linux/</link><pubDate>Fri, 15 Mar 2019 09:53:02 +0800</pubDate><guid>https://guoxudong.io/post/alpine-linux/</guid><description>
&lt;h3 id="简介">简介&lt;/h3>
&lt;blockquote>
&lt;p>Small. Simple. Secure.Alpine Linux is a security-oriented, lightweight Linux distribution based on musl libc and busybox.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Alpine Linux 是一个社区开发的面向安全应用的轻量级Linux发行版。 Alpine 的意思是“高山的”，它采用了musl libc和busybox以减小系统的体积和运行时资源消耗，同时还提供了自己的包管理工具apk。&lt;/p>
&lt;/blockquote>
&lt;h3 id="适用环境">适用环境&lt;/h3>
&lt;p>由于其小巧、安全、简单以及功能完备的特点，被广泛应用于众多Docker容器中。我司目前使用的基础镜像均是基于该系统，&lt;a href="https://hub.docker.com/_/alpine">dockerhub&lt;/a>上有提供各种语言的基础镜像.如：&lt;code>node:8-alpine&lt;/code>、&lt;code>python:3.6-alpine&lt;/code>，同时也可以基于alpine镜像制作符合自己需求的基础镜像。&lt;/p>
&lt;h3 id="简单的镜像构建示例">简单的镜像构建示例&lt;/h3>
&lt;p>这里提供一个python3的基础镜像的&lt;code>Dockerfile&lt;/code>，&lt;a href="https://pip.pypa.io/en/latest/installing/">get-pip.py&lt;/a>可在 &lt;a href="https://pip.pypa.io/en/latest/installing/">https://pip.pypa.io/en/latest/installing/&lt;/a> 下载。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-docker" data-lang="docker">&lt;span style="color:#6ab825;font-weight:bold">FROM&lt;/span>&lt;span style="color:#ed9d13"> alpine&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#6ab825;font-weight:bold">MAINTAINER&lt;/span>&lt;span style="color:#ed9d13"> guoxudong@keking.cn&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#999;font-style:italic"># 拷贝安装pip的脚本&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#6ab825;font-weight:bold">COPY&lt;/span> get-pip.py /get-pip.py&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#999;font-style:italic"># 设置alpine的镜像地址为阿里云的地址&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#6ab825;font-weight:bold">RUN&lt;/span> &lt;span style="color:#24909d">echo&lt;/span> &lt;span style="color:#ed9d13">&amp;#34;https://mirrors.aliyun.com/alpine/v3.6/main/&amp;#34;&lt;/span> &amp;gt; /etc/apk/repositories &lt;span style="color:#ed9d13">\
&lt;/span>&lt;span style="color:#ed9d13">&lt;/span> &lt;span style="color:#999;font-style:italic"># 安装依赖包&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span> &amp;amp;&amp;amp; apk update &lt;span style="color:#ed9d13">\
&lt;/span>&lt;span style="color:#ed9d13">&lt;/span> &amp;amp;&amp;amp; apk add --no-cache bash &lt;span style="color:#ed9d13">\
&lt;/span>&lt;span style="color:#ed9d13">&lt;/span> &lt;span style="color:#999;font-style:italic"># libevent-dev libxml2-dev libffi libxml2 libxslt libxslt-dev \&lt;/span>
python3 gcc g++ python3-dev python-dev linux-headers libffi-dev openssl-dev &lt;span style="color:#ed9d13">\
&lt;/span>&lt;span style="color:#ed9d13">&lt;/span> &lt;span style="color:#999;font-style:italic"># 由于通过apk安装的pip总是基于python2.7的版本，不符合项目要求，此处使用get-pip.py的方式&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span> &lt;span style="color:#999;font-style:italic">#安装基于python3.6的pip&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span> &amp;amp;&amp;amp; python3 /get-pip.py &lt;span style="color:#ed9d13">\
&lt;/span>&lt;span style="color:#ed9d13">&lt;/span> &lt;span style="color:#999;font-style:italic"># 删除不必要的脚本&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#24909d">cd&lt;/span> .. &lt;span style="color:#ed9d13">\
&lt;/span>&lt;span style="color:#ed9d13">&lt;/span> &amp;amp;&amp;amp; rm -f /get-pip.py &lt;span style="color:#ed9d13">\
&lt;/span>&lt;span style="color:#ed9d13">&lt;/span> &lt;span style="color:#999;font-style:italic"># 此环境专用做运行django项目，因此移除不必要的工具，减少空间&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span> &lt;span style="color:#999;font-style:italic"># &amp;amp;&amp;amp; pip uninstall -y pip setuptools wheel \&lt;/span>
&lt;span style="color:#999;font-style:italic"># 最后清空apk安装时产生的无用文件&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span> &amp;amp;&amp;amp; rm -rf /var/cache/apk/*&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>对比&lt;/strong>：同样版本的python，对比镜像大小，可见使用alpine的优势&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">~ docker images | grep python
python 3.4 ccbffa0d70d9 &lt;span style="color:#3677a9">2&lt;/span> months ago 922MB
alpine-python3 latest 69e41b673a50 &lt;span style="color:#3677a9">2&lt;/span> months ago 297MB
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="apk包管理">apk包管理&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>镜像源配置&lt;/p>
&lt;p>官方镜像源列表：http://dl-cdn.alpinelinux.org/alpine/MIRRORS.txt&lt;/p>
&lt;blockquote>
&lt;p>MIRRORS.txt中是当前Alpine官方提供的镜像源（Alpine安装的时候系统自动选择最佳镜像源）&lt;/p>
&lt;/blockquote>
&lt;p>国内镜像源&lt;/p>
&lt;ul>
&lt;li>清华TUNA镜像源：https://mirror.tuna.tsinghua.edu.cn/alpine/&lt;/li>
&lt;li>中科大镜像源：http://mirrors.ustc.edu.cn/alpine/&lt;/li>
&lt;li>阿里云镜像源：http://mirrors.aliyun.com/alpine/&lt;/li>
&lt;/ul>
&lt;p>镜像源配置&lt;/p>
&lt;p>这里推荐使用阿里云镜像源，由于公司应用都是部署在阿里云上，使用阿里云镜像源会快很多&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ vi /etc/apk/repositories
&lt;span style="color:#999;font-style:italic"># 将这两行插入到repositories文件开头&lt;/span>
http://mirrors.aliyun.com/alpine/v3.9/main
http://mirrors.aliyun.com/alpine/v3.9/community
&lt;span style="color:#999;font-style:italic"># 后面是原有的默认配置&lt;/span>
http://dl-cdn.alpinelinux.org/alpine/v3.8/main
http://dl-cdn.alpinelinux.org/alpine/v3.8/community
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>apk包管理命令&lt;/p>
&lt;p>这里介绍一些常用的操作apk包管理命令&lt;/p>
&lt;ul>
&lt;li>&lt;code>apk --help&lt;/code>可以查看完整的包管理命令&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">bash-4.3# apk --help
apk-tools 2.10.0, compiled &lt;span style="color:#6ab825;font-weight:bold">for&lt;/span> x86_64.
Installing and removing packages:
add Add PACKAGEs to &lt;span style="color:#ed9d13">&amp;#39;world&amp;#39;&lt;/span> and install (or upgrade) them, &lt;span style="color:#6ab825;font-weight:bold">while&lt;/span> ensuring that all dependencies are met
del Remove PACKAGEs from &lt;span style="color:#ed9d13">&amp;#39;world&amp;#39;&lt;/span> and uninstall them
System maintenance:
fix Repair package or upgrade it without modifying main dependencies
update Update repository indexes from all remote repositories
upgrade Upgrade currently installed packages to match repositories
cache Download missing PACKAGEs to cache and/or delete unneeded files from cache
Querying information about packages:
info Give detailed information about PACKAGEs or repositories
list List packages by PATTERN and other criteria
dot Generate graphviz graphs
policy Show repository policy &lt;span style="color:#6ab825;font-weight:bold">for&lt;/span> packages
Repository maintenance:
index Create repository index file from FILEs
fetch Download PACKAGEs from global repositories to a &lt;span style="color:#24909d">local&lt;/span> directory
verify Verify package integrity and signature
manifest Show checksums of package contents
Use apk &amp;lt;command&amp;gt; --help &lt;span style="color:#6ab825;font-weight:bold">for&lt;/span> command-specific help.
Use apk --help --verbose &lt;span style="color:#6ab825;font-weight:bold">for&lt;/span> a full &lt;span style="color:#24909d">command&lt;/span> listing.
This apk has coffee making abilities.
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>apk info&lt;/code> 列出所有已安装的软件包&lt;/li>
&lt;li>&lt;code>apk apk update&lt;/code> 更新最新本地镜像源&lt;/li>
&lt;li>&lt;code>apk upgrade&lt;/code> 升级软件&lt;/li>
&lt;li>&lt;code>apk search&lt;/code> 搜索可用软件包，&lt;strong>搜索之前最好先更新镜像源&lt;/strong>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ apk search &lt;span style="color:#999;font-style:italic">#查找所以可用软件包&lt;/span>
$ apk search -v &lt;span style="color:#999;font-style:italic">#查找所以可用软件包及其描述内容&lt;/span>
$ apk search -v &lt;span style="color:#ed9d13">&amp;#39;acf*&amp;#39;&lt;/span> &lt;span style="color:#999;font-style:italic">#通过软件包名称查找软件包&lt;/span>
$ apk search -v -d &lt;span style="color:#ed9d13">&amp;#39;docker&amp;#39;&lt;/span> &lt;span style="color:#999;font-style:italic">#通过描述文件查找特定的软件包&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>apk add&lt;/code> 从仓库中安装最新软件包，并自动安装必须的依赖包,也可以从第三方仓库添加软件包&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ apk add curl busybox-extras &lt;span style="color:#999;font-style:italic">#软件以空格分开这里，这里列举我们用的最多的curl和telnet&lt;/span>
bash-4.3# apk add --no-cache curl
bash-4.3# apk add mongodb --update-cache --repository http://mirrors.ustc.edu.cn/alpine/v3.6/main/ --allow-untrusted &lt;span style="color:#999;font-style:italic">#从指定镜像源拉取&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装指定版本软件包&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">bash-4.3# apk add &lt;span style="color:#40ffff">mongodb&lt;/span>=4.0.5-r0
bash-4.3# apk add &lt;span style="color:#ed9d13">&amp;#39;mongodb&amp;lt;4.0.5&amp;#39;&lt;/span>
bash-4.3# apk add &lt;span style="color:#ed9d13">&amp;#39;mongodb&amp;gt;4.0.5&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>升级指定软件包&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">bash-4.3# apk add --upgrade busybox &lt;span style="color:#999;font-style:italic">#升级指定软件包&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>注&lt;/strong>：安装之前最好修改本地镜像源，更新镜像源，搜索软件包是否存在，选择合适岸本在进行安装。&lt;/p>
&lt;ul>
&lt;li>&lt;code>apk del&lt;/code> 卸载并删除指定软件包&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="结语">结语&lt;/h3>
&lt;p>Alpine以其小巧、简单在docker容器中得到了广泛的应用。但是Alpine Linux使用了musl，可能和其他Linux发行版使用的glibc实现会有些不同。这里主要介绍了它的基础用法，但是足以满足日常运维需要。毕竟在kubernetes集群中操作容器内环境较直接在虚拟机或者物理机上操作更为复杂，由于缩减的容器的大小，导致和CentOS或Ubuntu相比缺少许多功能。而缺少的这些功能又不想在基础镜像中安装导致容器变大，这个时候就可以在容器运行后，根据实际需要安装即可。&lt;/p>
&lt;h3 id="参考文档">参考文档&lt;/h3>
&lt;p>&lt;a href="https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management">https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management&lt;/a>&lt;/p></description></item><item><title>Post: Docker容器启动退出解决方案</title><link>https://guoxudong.io/post/docker-quit/</link><pubDate>Thu, 27 Sep 2018 19:27:03 +0800</pubDate><guid>https://guoxudong.io/post/docker-quit/</guid><description>
&lt;h1 id="现象">现象&lt;/h1>
&lt;p>启动docker容器&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker run –name [CONTAINER_NAME] [CONTAINER_ID]
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看容器运行状态&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker ps -a
&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现刚刚启动的mydocker容器已经退出&lt;/p>
&lt;h1 id="原因">原因&lt;/h1>
&lt;p>docker容器的主线程（dockfile中CMD执行的命令）结束，容器会退出&lt;/p>
&lt;h1 id="解决办法">解决办法&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>可以使用交互式启动&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker run -i [CONTAINER_NAME or CONTAINER_ID]
&lt;/code>&lt;/pre>&lt;/div>&lt;p>``&lt;/p>
&lt;/li>
&lt;li>
&lt;p>上面的不太友好，建议使用后台模式和tty选项&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker run -dit [CONTAINER_NAME or CONTAINER_ID]
&lt;/code>&lt;/pre>&lt;/div>&lt;p>``&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Docker 容器在后台以守护态（Daemonized）形式运行，可以通过添加 -d 参数来实现&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ sudo docker run -d ubuntu:14.04 /bin/sh -c &lt;span style="color:#ed9d13">&amp;#34;while true; do echo hello world; sleep 1; done&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>``&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在脚本最后一行添加&lt;strong>tail -f /dev/null&lt;/strong>，这个命令永远完成不了，所以该脚本一直不会执行完，所以该容器永远不会退出。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;strong>TIPs&lt;/strong>:退出时，使用&lt;code>[ctrl + D]&lt;/code>，这样会结束docker当前线程，容器结束，可以使用 &lt;code>[ctrl + P]&lt;/code> &lt;code>[ctrl + Q]&lt;/code> 退出而不终止容器运行&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>如下命令，会在指定容器中执行指定命令， &lt;code>[ctrl+D]&lt;/code> 退出后不会终止容器运行&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>docker默认会把容器内部pid=1的作为默认的程序&lt;/p>
&lt;/blockquote></description></item><item><title>Post: centos7安装指定版本的docker</title><link>https://guoxudong.io/post/install-docker/</link><pubDate>Tue, 14 Aug 2018 20:05:21 +0800</pubDate><guid>https://guoxudong.io/post/install-docker/</guid><description>
&lt;h1 id="前言">前言&lt;/h1>
&lt;blockquote>
&lt;p>在使用&lt;strong>centos7&lt;/strong>，并使用荫安装搬运工的时候，往往不希望安装最新版本的搬运工，而是希望安装与自己熟悉或者当前业务环境需要的版本，例如目前Kubernetes支持的最新搬运工版本为v17.03，所以就产生了安装指定版本码头工人的需求。&lt;/p>
&lt;/blockquote>
&lt;h1 id="安装步骤">安装步骤&lt;/h1>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#999;font-style:italic"># 安装依赖包&lt;/span>
yum install -y yum-utils device-mapper-persistent-data lvm2
&lt;span style="color:#999;font-style:italic"># 添加Docker软件包源&lt;/span>
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
&lt;span style="color:#999;font-style:italic">#关闭测试版本list（只显示稳定版）&lt;/span>
sudo yum-config-manager --enable docker-ce-edge
sudo yum-config-manager --enable docker-ce-test
&lt;span style="color:#999;font-style:italic"># 更新yum包索引&lt;/span>
yum makecache fast
&lt;span style="color:#999;font-style:italic">#NO.1 直接安装Docker CE （will always install the highest possible version，可能不符合你的需求）&lt;/span>
yum install docker-ce
&lt;span style="color:#999;font-style:italic">#NO.2 指定版本安装&lt;/span>
yum list docker-ce --showduplicates|sort -r
&lt;span style="color:#999;font-style:italic">#找到需要安装的&lt;/span>
yum install docker-ce-17.09.0.ce -y
&lt;span style="color:#999;font-style:italic">#启动docker&lt;/span>
systemctl start docker &amp;amp; systemctl &lt;span style="color:#24909d">enable&lt;/span> docker
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="采坑指南">采坑指南&lt;/h1>
&lt;blockquote>
&lt;p>当然本着万事皆有坑的原则，这里也是有坑的，在安装中也是会遇到如下的问题&lt;/p>
&lt;/blockquote>
&lt;p>在执行一下命令的时候：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">yum install docker-ce-17.03.0.ce -y
&lt;/code>&lt;/pre>&lt;/div>&lt;p>会出现如下的报错：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">--&amp;gt; Finished Dependency Resolution
Error: Package: docker-ce-17.03.0.ce-1.el7.centos.x86_64 (docker-ce-stable)
Requires: docker-ce-selinux &amp;gt;= 17.03.0.ce-1.el7.centos
Available: docker-ce-selinux-17.03.0.ce-1.el7.centos.noarch (docker-ce-stable)
docker-ce-selinux = 17.03.0.ce-1.el7.centos
Available: docker-ce-selinux-17.03.1.ce-1.el7.centos.noarch (docker-ce-stable)
docker-ce-selinux = 17.03.1.ce-1.el7.centos
Available: docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch (docker-ce-stable)
docker-ce-selinux = 17.03.2.ce-1.el7.centos
You could try using --skip-broken to work around the problem
You could try running: rpm -Va --nofiles --nodigest
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在出现这个问题之后，需要执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#999;font-style:italic">#要先安装docker-ce-selinux-17.03.2.ce，否则安装docker-ce会报错&lt;/span>
yum install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm
&lt;span style="color:#999;font-style:italic">#然后再安装 docker-ce-17.03.2.ce，就能正常安装&lt;/span>
yum install docker-ce-17.03.2.ce-1.el7.centos
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>