<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guo Xudong's Blog·郭旭东的博客 – 日志服务</title><link>https://guoxudong.io/tags/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1/</link><description>Recent content in 日志服务 on Guo Xudong's Blog·郭旭东的博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Mon, 02 Mar 2020 15:29:16 +0800</lastBuildDate><atom:link href="https://guoxudong.io/tags/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>Post: 修改 Nginx Ingress 日志打印格式</title><link>https://guoxudong.io/post/nginx-ingress-log-aliyun/</link><pubDate>Mon, 02 Mar 2020 15:29:16 +0800</pubDate><guid>https://guoxudong.io/post/nginx-ingress-log-aliyun/</guid><description>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近接到一个需求，需要展示 ingress 上面的访问日志，由于我们的业务系统都部署在 Kubernetes 上面，通过 ingress 进行访问，所以这里的访问日志，其实就是我们全部业务系统的访问日志。&lt;/p>
&lt;p>日志采集方面，阿里云天生就提供了 nginx-ingress 日志和采集和展示，本身提供很多不错的基于 ingress 日志数据的图表与分析。如果你使用的是阿里云 ACK 容器服务，那么极端推荐使用，配置方法见官方文档：https://help.aliyun.com/document_detail/86532.html。&lt;/p>
&lt;p>&lt;img src="https://tva2.sinaimg.cn/large/ad5fbf65gy1gcfmo5d410j21970nzwjg.jpg" alt="image">&lt;/p>
&lt;p>让人头秃的是，我们这次不但要采集 ingress 日志上比较常规的 &lt;code>url&lt;/code> &lt;code>client_ip&lt;/code> &lt;code>method&lt;/code> &lt;code>status&lt;/code> 等字段，还要采集我们系统在 &lt;code>Request Headers&lt;/code> 里面自定义的参数，这些参数是默认的 ingress 并不展示的，所以需要我们进行调整。&lt;/p>
&lt;h2 id="开始">开始&lt;/h2>
&lt;p>首先明确需要调整的组件：&lt;/p>
&lt;ul>
&lt;li>&lt;code>nginx-ingress&lt;/code> 的 ConfigMap：用于打印自定义日志字段&lt;/li>
&lt;li>&lt;code>AliyunLogConfig&lt;/code>：这个是阿里云日志服务的 CRD 扩展，需要在这个里面加入新增的字段名和修改后的正则表达式&lt;/li>
&lt;li>在日志服务控制台，添加新增字段的指定字段查询&lt;/li>
&lt;li>新增展示仪表盘&lt;/li>
&lt;/ul>
&lt;h3 id="调整-ingress-日志输出">调整 ingress 日志输出&lt;/h3>
&lt;p>我们 ingress 组件使用的是 &lt;code>nginx-ingress-container&lt;/code>，这里要调整日志输出格式，老规矩，直接官方文档：https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/。&lt;/p>
&lt;p>从文档可见，只需要调整 &lt;code>ingress-nginx&lt;/code> 的 ConfigMap &lt;code>nginx-configuration&lt;/code> data 中的 &lt;code>log-format-upstream&lt;/code> 字段即可。&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;p>知识点：&lt;/p>
&lt;p>官方文档里面给的说明不是很详细，没有提到 &lt;code>Request Headers&lt;/code> 里自定义的字段应该怎么表示（也有可能是我眼瘸没看见），但经过我多次试验发现，&lt;code>Request Headers&lt;/code> 里的字段在 &lt;code>log-format-upstream&lt;/code> 中应该使用 &lt;code>$http_{your field}&lt;/code> 表示，比如 &lt;code>$http_cookie&lt;/code>；而带 &lt;code>-&lt;/code> 的字段则需要将 &lt;code>-&lt;/code> 改为 &lt;code>_&lt;/code>，并且使用小写，比如 &lt;code>app-Id&lt;/code> 就应使用 &lt;code>$http_app_id&lt;/code> 表示。&lt;/p>
&lt;/div>
&lt;p>修改 ConfigMap，&lt;code>ingress-controller&lt;/code> 将进行热更新，看到如下日志，就证明配置已完成更新，接下来就可以看到你自定义字段的值已经打印出来了。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">I0302 &lt;span style="color:#3677a9">08&lt;/span>:&lt;span style="color:#3677a9">20&lt;/span>:&lt;span style="color:#3677a9">58.393365&lt;/span> &lt;span style="color:#3677a9">9&lt;/span> controller.&lt;span style="color:#6ab825;font-weight:bold">go&lt;/span>:&lt;span style="color:#3677a9">200&lt;/span>] Backend successfully reloaded.
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="调整阿里云日志组件配置">调整阿里云日志组件配置&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
执行下面的步骤请确保已经按照&lt;a href="https://help.aliyun.com/document_detail/86532.html">官方文档&lt;/a>正确部署阿里云日志服务在您的 K8S 集群之后，并且已达到要求的版本。
&lt;/div>
&lt;p>日志已经成功打印了，接下来就是调整日志采集的字段了，这里只需要调整日志服务 CRD 的扩展配置即可。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ kubectl edit AliyunLogConfig k8s-nginx-ingress
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在修改配置之前，推荐先去 &lt;a href="https://regex101.com/">https://regex101.com/&lt;/a> 验证正则表达式是否正确，将调整过的正则表达式和 &lt;code>ingress-controller&lt;/code> 打印的日志贴入下图指定位置，就可以看出正则表达式是否正确。&lt;/p>
&lt;p>&lt;img src="https://tvax1.sinaimg.cn/large/ad5fbf65gy1gcfo9lxuc6j21gv0juwka.jpg" alt="image">&lt;/p>
&lt;p>然后将添加的字段名称（这个名称将作为 key 在日志服务中展示，可以与 header 中的字段不同）和正则表达式贴入如下 CRD 中。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#6ab825;font-weight:bold">apiVersion&lt;/span>:&lt;span style="color:#666"> &lt;/span>log.alibabacloud.com/v1alpha1&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666">&lt;/span>&lt;span style="color:#6ab825;font-weight:bold">kind&lt;/span>:&lt;span style="color:#666"> &lt;/span>AliyunLogConfig&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666">&lt;/span>&lt;span style="color:#6ab825;font-weight:bold">metadata&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#999;font-style:italic"># your config name, must be unique in you k8s cluster&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">name&lt;/span>:&lt;span style="color:#666"> &lt;/span>k8s-nginx-ingress&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666">&lt;/span>&lt;span style="color:#6ab825;font-weight:bold">spec&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#999;font-style:italic"># logstore name to upload log&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">logstore&lt;/span>:&lt;span style="color:#666"> &lt;/span>nginx-ingress&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#999;font-style:italic"># product code, only for k8s nginx ingress&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">productCode&lt;/span>:&lt;span style="color:#666"> &lt;/span>k8s-nginx-ingress&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#999;font-style:italic"># logtail config detail&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">logtailConfig&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">inputType&lt;/span>:&lt;span style="color:#666"> &lt;/span>plugin&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#999;font-style:italic"># logtail config name, should be same with [metadata.name]&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">configName&lt;/span>:&lt;span style="color:#666"> &lt;/span>k8s-nginx-ingress&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">inputDetail&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">plugin&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">inputs&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- &lt;span style="color:#6ab825;font-weight:bold">type&lt;/span>:&lt;span style="color:#666"> &lt;/span>service_docker_stdout&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">detail&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">IncludeLabel&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">io.kubernetes.container.name&lt;/span>:&lt;span style="color:#666"> &lt;/span>nginx-ingress-controller&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">Stderr&lt;/span>:&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">false&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">Stdout&lt;/span>:&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">true&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">processors&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- &lt;span style="color:#6ab825;font-weight:bold">type&lt;/span>:&lt;span style="color:#666"> &lt;/span>processor_regex&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">detail&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">KeepSource&lt;/span>:&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">false&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">Keys&lt;/span>:&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- client_ip&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- x_forward_for&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- remote_user&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- time&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- method&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- url&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- version&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- status&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- body_bytes_sent&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- http_referer&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- http_user_agent&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- request_length&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- request_time&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- proxy_upstream_name&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- upstream_addr&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- upstream_response_length&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- upstream_response_time&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- upstream_status&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- req_id&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- host&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- &lt;span style="color:#999;font-style:italic">#需要添加的字段名称&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>- ...&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">NoKeyError&lt;/span>:&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">true&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">NoMatchError&lt;/span>:&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">true&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">Regex&lt;/span>:&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#999;font-style:italic">#修改后的正则表达式&lt;/span>&lt;span style="color:#666">
&lt;/span>&lt;span style="color:#666"> &lt;/span>&lt;span style="color:#6ab825;font-weight:bold">SourceKey&lt;/span>:&lt;span style="color:#666"> &lt;/span>content&lt;span style="color:#666">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="日志控制台新增字段">日志控制台新增字段&lt;/h3>
&lt;p>如果上面的操作无误的话，日志服务中就会展示您添加的字段了，如果配置有误，所有的自定义字段都会不显示，只会显示保留字段名称。&lt;/p>
&lt;p>添加指定字段查询，就可以快速查看添加的字段了。&lt;/p>
&lt;p>&lt;img src="https://tva3.sinaimg.cn/large/ad5fbf65gy1gcfohy9fv4j21460gxtc6.jpg" alt="image">&lt;/p>
&lt;h3 id="新增展示仪表盘">新增展示仪表盘&lt;/h3>
&lt;p>日志既然已经取到了，那么展示就很容易了，直接在查询栏中输入分析语句，日志服务支持 SQL 聚合日志，并直接生成统计图表，点击添加到仪表盘可以就可以添加到现有仪表盘或者新建一个仪表盘。&lt;/p>
&lt;p>&lt;img src="https://tva2.sinaimg.cn/large/ad5fbf65gy1gcfos33c23j219a0nuae3.jpg" alt="image">&lt;/p>
&lt;h2 id="成果">成果&lt;/h2>
&lt;p>之后进行一些微调，添加过滤栏，由于这里统计的是登录用户，你甚至都可以添加一个词云来看看哪些用于使用系统比较频繁。当然，想添加什么都看您的喜好，日志在你手里，想怎么分析都可以。&lt;/p>
&lt;p>&lt;img src="https://tva4.sinaimg.cn/large/ad5fbf65gy1gcfowk10tjj21970ns79i.jpg" alt="image">&lt;/p>
&lt;h2 id="结语">结语&lt;/h2>
&lt;p>本次实现的功能并不是什么高深的功能，只不过是一个简单的访问日志记录和展示，相信每个系统其实都有一套这种功能。但是这种实现方式在我看来优点更多：&lt;/p>
&lt;ul>
&lt;li>无代码：全程没有写一行代码，如果有的话，也就是业务需要统一 &lt;code>Request Headers&lt;/code> 里面的字段。&lt;/li>
&lt;li>配置简单：只需要修改 nginx ConfigMap 中的一个字段，并在 CRD 中添加字段名称和正在表达式，唯一的难度可能就是正则表达式。&lt;/li>
&lt;li>配置快：整体的配置时间很短，加上查文档和调整图表也不过半天的时间，肯定比 &lt;code>提需求-评估-开发-测试-验收&lt;/code> 全流程走一遍，前端后端撕一遍要快的多的多的多。&lt;/li>
&lt;li>高度定制：可以根据自己的喜好，随意定制图表。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>最近发现阿里云日志服务是一个宝藏产品，从安全到 k8s 业务，从成本控制到疫情动态，日志服务真的就是把所有没有前端开发资源的服务都帮了一把。
&amp;mdash; 摘自本人朋友圈&lt;/p>
&lt;/blockquote></description></item></channel></rss>