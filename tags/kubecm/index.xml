<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guo Xudong&#39;s Blog·郭旭东的博客 – kubecm</title>
    <link>https://guoxudong.io/tags/kubecm/</link>
    <description>Recent content in kubecm on Guo Xudong&#39;s Blog·郭旭东的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 17 Feb 2020 11:51:39 +0800</lastBuildDate>
    
	  <atom:link href="https://guoxudong.io/tags/kubecm/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Post: K3d&#43;Kubecm 本地开发运维两不误</title>
      <link>https://guoxudong.io/post/k3d-k3s-kubecm/</link>
      <pubDate>Mon, 17 Feb 2020 11:51:39 +0800</pubDate>
      
      <guid>https://guoxudong.io/post/k3d-k3s-kubecm/</guid>
      <description>
        
        
        &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;k3s 是由 Rancher Labs 于2019年年初推出的一款轻量级 Kubernetes 发行版，满足在边缘计算环境中运行在 x86、ARM64 和 ARMv7 处理器上的小型、易于管理的 Kubernetes 集群日益增长的需求。&lt;/p&gt;
&lt;p&gt;k3s 除了在边缘计算领域的应用外，在研发侧的表现也十分出色。我们可以快速在本地拉起一个轻量级的 k8s 集群，而 k3d 则是 k3s 社区创建的一个小工具，可以在一个 docker 进程中运行整个 k3s 集群，相比直接使用 k3s 运行在本地，更好管理和部署。&lt;/p&gt;
&lt;p&gt;在日常工作中，时长要在本地集群和多个远程集群之间切换来完成运维工作，这时使用 &lt;code&gt;kubecm&lt;/code&gt; 快速将 k3s 集群的 kubeconfig 与现有集群的 kubeconfig 合并，并可快速切换集群，开发运维两不误。&lt;/p&gt;
&lt;h2 id=&#34;安装-k3d&#34;&gt;安装 k3d&lt;/h2&gt;
&lt;p&gt;k3d 提供了多种安装方式，十分方便。&lt;/p&gt;
&lt;h3 id=&#34;使用脚本安装&#34;&gt;使用脚本安装&lt;/h3&gt;
&lt;p&gt;直接使用 &lt;code&gt;wget&lt;/code&gt; 和 &lt;code&gt;curl&lt;/code&gt; 安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
&lt;span style=&#34;color:#6272a4&#34;&gt;# 或&lt;/span&gt;
curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装指定版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;TAG&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;v1.3.4 bash
&lt;span style=&#34;color:#6272a4&#34;&gt;# 或&lt;/span&gt;
curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;TAG&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;v1.3.4 bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用-homebrew-安装&#34;&gt;使用 Homebrew 安装&lt;/h3&gt;
&lt;p&gt;MacOS 或安装了 Homebrew 的 Linux 可以使用 brew 安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install k3d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;其他&#34;&gt;其他&lt;/h3&gt;
&lt;p&gt;还可以直接前往 &lt;a href=&#34;https://github.com/rancher/k3d/releases&#34;&gt;release 页面&lt;/a&gt; 下载二进制可执行文件，或者直接使用 &lt;code&gt;go install github.com/rancher/k3d&lt;/code&gt; 安装。&lt;/p&gt;
&lt;h2 id=&#34;创建-k3s-集群&#34;&gt;创建 k3s 集群&lt;/h2&gt;
&lt;p&gt;创建 k3s 集群也十分简单，一行命令就可拉起，速度非常快。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;$ k3d create &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;n k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] Created cluster network with ID facae4a046b169721805f93ec21ba1acb65b9efb8cf35866529178cb0fba75a9
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] Created docker volume  k3d&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;images
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] Creating cluster [k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local]
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] Creating server using docker.io&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;rancher&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;k3s:v1&lt;span style=&#34;color:#bd93f9&#34;&gt;.0.1&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] SUCCESS: created cluster [k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local]
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] You can now use the cluster with:

export KUBECONFIG=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;$(k3d get-kubeconfig --name=&amp;#39;k3s-local&amp;#39;)&amp;#34;&lt;/span&gt;
kubectl cluster&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;info
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是一般情况下，如果没有梯子的话，k3s 集群虽然拉起来很快，但因为拉不到镜像，集群组件都无法正常拉起。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;$ export KUBECONFIG=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;$(k3d get-kubeconfig --name=&amp;#39;k3s-local&amp;#39;)&amp;#34;&lt;/span&gt;
$ kubectl get pod &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;n kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system
NAME                                      READY   STATUS              RESTARTS   AGE
helm&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;install&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;traefik&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;wxmr                &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     ContainerCreating   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;m30s
metrics&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;server&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;d684c7b5&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;j4sc7            &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     ContainerCreating   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;m30s
coredns&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;d798c9dd&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;j6lpw                    &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     ContainerCreating   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;m30s
local&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;path&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;provisioner&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;58&lt;/span&gt;fb86bdfd&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;wv7sw   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     ContainerCreating   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;m30s
$ kubectl describe pod coredns&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;d798c9dd&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;j6lpw &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;n kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system
&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;
Events:
  Type     Reason                  Age                 From                           Message
  &lt;span style=&#34;color:#ff79c6&#34;&gt;----&lt;/span&gt;     &lt;span style=&#34;color:#ff79c6&#34;&gt;------&lt;/span&gt;                  &lt;span style=&#34;color:#ff79c6&#34;&gt;----&lt;/span&gt;                &lt;span style=&#34;color:#ff79c6&#34;&gt;----&lt;/span&gt;                           &lt;span style=&#34;color:#ff79c6&#34;&gt;-------&lt;/span&gt;
  Normal   Scheduled               &amp;lt;unknown&amp;gt;           &lt;span style=&#34;color:#ff79c6&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;scheduler              Successfully assigned kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;coredns&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;d798c9dd&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;j6lpw to k3d&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;server
  Warning  FailedCreatePodSandBox  &lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;s&lt;/span&gt; (x7 over &lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;m30s)  kubelet, k3d&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;server  Failed create pod sandbox: rpc &lt;span style=&#34;color:#8be9fd&#34;&gt;error&lt;/span&gt;: code = Unknown desc = failed to get sandbox image &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;k8s.gcr.io/pause:3.1&amp;#34;&lt;/span&gt;: failed to pull image &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;k8s.gcr.io/pause:3.1&amp;#34;&lt;/span&gt;: failed to pull and unpack image &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;k8s.gcr.io/pause:3.1&amp;#34;&lt;/span&gt;: failed to resolve reference &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;k8s.gcr.io/pause:3.1&amp;#34;&lt;/span&gt;: failed to do request: Head https:&lt;span style=&#34;color:#6272a4&#34;&gt;//k8s.gcr.io/v2/pause/manifests/3.1: dial tcp 64.233.189.82:443: i/o timeout
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;离线安装&#34;&gt;离线安装&lt;/h3&gt;
&lt;p&gt;如果没有梯子的话，就只能选择使用离线安装。&lt;/p&gt;
&lt;h4 id=&#34;下载离线镜像&#34;&gt;下载离线镜像&lt;/h4&gt;
&lt;p&gt;前往 &lt;a href=&#34;https://github.com/rancher/k3s/releases&#34;&gt;release 页面&lt;/a&gt; 下载指定版本的镜像，这里我们下载最新的 &lt;a href=&#34;https://github.com/rancher/k3s/releases/tag/v1.17.2%2Bk3s1&#34;&gt;v1.17.2+k3s1&lt;/a&gt; 镜像。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tvax1.sinaimg.cn/large/ad5fbf65gy1gbzdedmqpdj20sh0k776o.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载到 &lt;code&gt;~/airgap&lt;/code&gt; 目录中，并进行解压，将解压后的目录重命名为 &lt;code&gt;1.17.2&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;运行离线镜像&#34;&gt;运行离线镜像&lt;/h3&gt;
&lt;p&gt;这里再次运行 k3d，部署 k3s 集群。这里要注意的是，挂载离线镜像的话，必须使用 &lt;code&gt;-i&lt;/code&gt; flag 来指定镜像版本，这里我们使用的是 &lt;a href=&#34;https://github.com/rancher/k3s/releases/tag/v1.17.2%2Bk3s1&#34;&gt;v1.17.2+k3s1&lt;/a&gt; 版本，而镜像的 tag 则是 &lt;code&gt;v1.17.2-k3s1&lt;/code&gt;，如果不确定 tag，可以去 &lt;a href=&#34;https://hub.docker.com/r/rancher/k3s/tags&#34;&gt;DockerHub&lt;/a&gt; 上查看。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;$ k3d create &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;n k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;i rancher&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;k3s:v1&lt;span style=&#34;color:#bd93f9&#34;&gt;.17.2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;k3s1  &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;v $(pwd)&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;airgap&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;v1&lt;span style=&#34;color:#bd93f9&#34;&gt;.17.2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;:&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;lib&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;rancher&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;agent&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;images&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] Created cluster network with ID &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;b3fca995fcb491ae1fe1c901672bf6f0a0fd6f51785ba8403947d2773ebd43
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] Created docker volume  k3d&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;images
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] Creating cluster [k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local]
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] Creating server using docker.io&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;rancher&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;k3s:v1&lt;span style=&#34;color:#bd93f9&#34;&gt;.17.2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;k3s1&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] SUCCESS: created cluster [k3s&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;local]
INFO[&lt;span style=&#34;color:#bd93f9&#34;&gt;0000&lt;/span&gt;] You can now use the cluster with:

export KUBECONFIG=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;$(k3d get-kubeconfig --name=&amp;#39;k3s-local&amp;#39;)&amp;#34;&lt;/span&gt;
kubectl cluster&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;info
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看 k3s 集群组件启动状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;$ export KUBECONFIG=&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;$(k3d get-kubeconfig --name=&amp;#39;k3s-local&amp;#39;)&amp;#34;&lt;/span&gt;
$ kubectl get pod &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;A &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;w
NAMESPACE     NAME                                      READY   STATUS              RESTARTS   AGE
kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system   local&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;path&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;provisioner&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;58&lt;/span&gt;fb86bdfd&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;jzbw   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     ContainerCreating   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;m35s
kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system   coredns&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;d798c9dd&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;jhmds                    &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     Running             &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;m35s
kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system   metrics&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;server&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;d684c7b5&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;x2cd            &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     Running             &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;m35s
kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system   traefik&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;6787&lt;/span&gt;cddb4b&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;9&lt;/span&gt;v7r4                  &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     ContainerCreating   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt;s
kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system   svclb&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;traefik&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;fzrqj                       &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;     ContainerCreating   &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;15&lt;/span&gt;s
kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system   helm&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;install&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;traefik&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;h8k2j                &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;     Completed           &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;m35s
kube&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;system   svclb&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;traefik&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;fzrqj                       &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;     Running             &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color:#bd93f9&#34;&gt;21&lt;/span&gt;s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;使用-kubecm&#34;&gt;使用 kubecm&lt;/h2&gt;
&lt;p&gt;在 k3s 集群启动成功后，使用 &lt;a href=&#34;https://github.com/sunny0826/kubecm&#34;&gt;&lt;code&gt;kubecm&lt;/code&gt;&lt;/a&gt;，将 k3s 的 kubeconfig 与现有 kubeconfig 合并。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubecm add -f &lt;span style=&#34;color:#ff79c6&#34;&gt;$(&lt;/span&gt;k3d get-kubeconfig --name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;k3s-local&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; -n k3s -c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;切换集群，选择 k3s。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;$ kubecm s
Use the arrow keys to navigate: ↓ ↑ → ←  and &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; toggles search
Select Kube Context
  😼 &lt;span style=&#34;color:#50fa7b&#34;&gt;k3s&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;)
    prod&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;tg
    test
↓   banma

&lt;span style=&#34;color:#ff79c6&#34;&gt;---------&lt;/span&gt; Info &lt;span style=&#34;color:#ff79c6&#34;&gt;----------&lt;/span&gt;
Name:           k3s
Cluster:        cluster&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;485&lt;/span&gt;d6mhcfm
User:           user&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;485&lt;/span&gt;d6mhcfm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在就可以在本地使用 k3s 集群进行开发工作，而有运维工作的时候，使用 &lt;code&gt;kubecm switch&lt;/code&gt; 快速切换集群。&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://tva3.sinaimg.cn/large/ad5fbf65gy1gbzegsyex5j20x90n70vv.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;k3s 同时支持 &lt;strong&gt;x86_64&lt;/strong&gt;、&lt;strong&gt;ARM64&lt;/strong&gt; 和 &lt;strong&gt;ARMv7&lt;/strong&gt; 架构，它可以十分灵活地跨任何边缘基础架构工作。不提 k3s 在边缘计算领域的应用，与之前使用的 &lt;a href=&#34;https://github.com/kubernetes/minikube&#34;&gt;minikube&lt;/a&gt; 相比，k3s 裁剪掉了许多用不到的功能，并且安装更简单，启动更快，空间占用也更小。相信 k3s 在开发侧的作用也会越来越大，使云原生应用的开发更加的便利。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Post: Kubecm：管理你的 kubeconfig</title>
      <link>https://guoxudong.io/post/kubecm/</link>
      <pubDate>Mon, 09 Dec 2019 10:07:46 +0800</pubDate>
      
      <guid>https://guoxudong.io/post/kubecm/</guid>
      <description>
        
        
        &lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;该项目脱胎于 &lt;a href=&#34;https://github.com/sunny0826/mergeKubeConfig&#34;&gt;mergeKubeConfig&lt;/a&gt; 项目，最早写该项目的目的是在一堆杂乱无章的 kubeconfig 中自由的切换。随着需要操作的 Kubernetes 集群越来越多，在不同的集群之间切换也越来越麻烦，而操作 Kubernetes 集群的本质不过是通过 &lt;code&gt;kubeconfig&lt;/code&gt; 访问 Kubernetes 集群的 API Server，以操作 Kubernetes 的各种资源，而 &lt;code&gt;kubeconfig&lt;/code&gt; 不过是一个 yaml 文件，用来保存访问集群的密钥，最早的 &lt;a href=&#34;https://github.com/sunny0826/mergeKubeConfig&#34;&gt;mergeKubeConfig&lt;/a&gt; 不过是一个操作 yaml 文件的 Python 脚本。而随着 golang 学习的深入，也就动了重写这个项目的念头，就这样 &lt;a href=&#34;https://github.com/sunny0826/kubecm&#34;&gt;kubecm&lt;/a&gt; 诞生了。&lt;/p&gt;
&lt;h2 id=&#34;kubecm&#34;&gt;kubecm&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sunny0826/kubecm&#34;&gt;kubecm&lt;/a&gt; 由 golang 编写，支持 &lt;code&gt;Mac&lt;/code&gt; &lt;code&gt;Linux&lt;/code&gt; 和 &lt;code&gt;windows&lt;/code&gt; 平台，&lt;code&gt;delete&lt;/code&gt; &lt;code&gt;rename&lt;/code&gt; &lt;code&gt;switch&lt;/code&gt; 提供比较实用的交互式的操作，目前的功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add ：添加新的 &lt;code&gt;kubeconfig&lt;/code&gt; 到 &lt;code&gt;$HOME/.kube/config&lt;/code&gt; 中&lt;/li&gt;
&lt;li&gt;completion ：命令行自动补全功能&lt;/li&gt;
&lt;li&gt;delete：删除已有的 &lt;code&gt;context&lt;/code&gt; ，提供交互式和指定删除两种方式&lt;/li&gt;
&lt;li&gt;merge：将指定目录中的 &lt;code&gt;kubeconfig&lt;/code&gt; 合并为一个 &lt;code&gt;kubeconfig&lt;/code&gt; 文件&lt;/li&gt;
&lt;li&gt;rename：重名指定的 &lt;code&gt;context&lt;/code&gt;，提供交互式和指定重命名两种方式&lt;/li&gt;
&lt;li&gt;switch：交互式切换 &lt;code&gt;context&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sunny0826/kubecm&#34;&gt;kubecm&lt;/a&gt; 支持 &lt;code&gt;Mac&lt;/code&gt; &lt;code&gt;Linux&lt;/code&gt; 和 &lt;code&gt;windows&lt;/code&gt; 平台，安装方式也比较简单：&lt;/p&gt;
&lt;h4 id=&#34;macos&#34;&gt;MacOS&lt;/h4&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

使用 &lt;code&gt;brew&lt;/code&gt; 或者直接下载二进制可执行文件
&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;brew install sunny0826/tap/kubecm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;linux&#34;&gt;Linux&lt;/h4&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

下载二进制可执行文件
&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# linux x86_64&lt;/span&gt;
curl -Lo kubecm.tar.gz https://github.com/sunny0826/kubecm/releases/download/v&lt;span style=&#34;color:#f1fa8c&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;VERSION&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;}&lt;/span&gt;/kubecm_&lt;span style=&#34;color:#f1fa8c&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;VERSION&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;}&lt;/span&gt;_Linux_x86_64.tar.gz
tar -zxvf kubecm.tar.gz kubecm
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;cd&lt;/span&gt; kubecm
sudo mv kubecm /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;windows&#34;&gt;Windows&lt;/h4&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

下载二进制可执行文件，并将文件移动到 &lt;code&gt;$PATH&lt;/code&gt; 中即可
&lt;/div&gt;

&lt;h2 id=&#34;命令行自动补全&#34;&gt;命令行自动补全&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;a href=&#34;https://github.com/sunny0826/kubecm&#34;&gt;kubecm&lt;/a&gt; 提供了和 &lt;a href=&#34;https://github.com/kubernetes/kubectl&#34;&gt;kubectl&lt;/a&gt; 一样的 completion 命令行自动补全功能（支持 bash/zsh）
&lt;/div&gt;

&lt;p&gt;以 &lt;code&gt;zsh&lt;/code&gt; 为例，在 &lt;code&gt;$HOME/.zshrc&lt;/code&gt; 中添加&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vim&#34; data-lang=&#34;vim&#34;&gt;source &amp;lt;(kubecm completion zsh)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后使用 &lt;code&gt;source&lt;/code&gt; 命令，使其生效&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;$HOME&lt;/span&gt;/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后，在输入 &lt;code&gt;kubecm&lt;/code&gt; 后按 &lt;kbd&gt;tab&lt;/kbd&gt; 键，就可以看到命令行自动补全的内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tva2.sinaimg.cn/large/ad5fbf65gy1g9qa0yy3bvj21co0f2hdt.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;操作-kubeconfig&#34;&gt;操作 kubeconfig&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;a href=&#34;https://github.com/sunny0826/kubecm&#34;&gt;kubecm&lt;/a&gt; 可以实现 &lt;code&gt;kubeconfig&lt;/code&gt; 的查看、添加、删除、合并、重命名和切换
&lt;/div&gt;

&lt;h4 id=&#34;查看&#34;&gt;查看&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 查看 $HOME/.kube/config 中所有的 context&lt;/span&gt;
kubecm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;添加&#34;&gt;添加&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 添加 example.yaml 到 $HOME/.kube/config.yaml，该方式不会覆盖源 kubeconfig，只会在当前目录中生成一个 config.yaml 文件&lt;/span&gt;
kubecm add -f example.yaml

&lt;span style=&#34;color:#6272a4&#34;&gt;# 功能同上，但是会将 example.yaml 中的 context 命名为 test&lt;/span&gt;
kubecm add -f example.yaml -n &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;test&lt;/span&gt;

&lt;span style=&#34;color:#6272a4&#34;&gt;# 添加 -c 会覆盖源 kubeconfig&lt;/span&gt;
kubecm add -f example.yaml -c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;删除&#34;&gt;删除&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 交互式删除&lt;/span&gt;
kubecm delete
&lt;span style=&#34;color:#6272a4&#34;&gt;# 删除指定 context&lt;/span&gt;
kubecm delete my-context
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;合并&#34;&gt;合并&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 合并 test 目录中的 kubeconfig,该方式不会覆盖源 kubeconfig，只会在当前目录中生成一个 config.yaml 文件&lt;/span&gt;
kubecm merge -f &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;test&lt;/span&gt; 

&lt;span style=&#34;color:#6272a4&#34;&gt;# 添加 -c 会覆盖源 kubeconfig&lt;/span&gt;
kubecm merge -f &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;test&lt;/span&gt; -c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;重命名&#34;&gt;重命名&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 交互式重命名&lt;/span&gt;
kubecm rename
&lt;span style=&#34;color:#6272a4&#34;&gt;# 将 dev 重命名为 test&lt;/span&gt;
kubecm rename -o dev -n &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;test&lt;/span&gt;
&lt;span style=&#34;color:#6272a4&#34;&gt;# 重命名 current-context 为 dev&lt;/span&gt;
kubecm rename -n dev -c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;切换默认-namespace&#34;&gt;切换默认 namespace&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 交互式切换 namespace&lt;/span&gt;
kubecm namespace
&lt;span style=&#34;color:#6272a4&#34;&gt;# 或者&lt;/span&gt;
kubecm ns
&lt;span style=&#34;color:#6272a4&#34;&gt;# 切换默认 namespace 为 kube-system&lt;/span&gt;
kubecm ns kube-system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;效果展示&#34;&gt;效果展示&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;Interaction.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;视频介绍&#34;&gt;视频介绍&lt;/h2&gt;

&lt;div style=&#34;position: relative; width: 100%; height: 0; padding-bottom: 75%;&#34;&gt;
    &lt;iframe src=&#34;//player.bilibili.com/player.html?aid=88259938&amp;amp;cid=150776221&amp;amp;page=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34;style=&#34;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&#34;&gt; &lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sunny0826/kubecm&#34;&gt;kubecm&lt;/a&gt; 项目的初衷为学习 golang 并熟悉 client-go 的使用，随着使用的深入，断断续续增加了不少功能，开发出了一个看上去还算正规的项目。总的来说都是根据自己的喜好来开发的业余项目，欢迎各位通过 &lt;a href=&#34;https://github.com/sunny0826/kubecm/issues/new&#34;&gt;ISSUE&lt;/a&gt; 来进行交流和讨论。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
