<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guo Xudong's Blog·郭旭东的博客 – python</title><link>https://guoxudong.io/tags/python/</link><description>Recent content in python on Guo Xudong's Blog·郭旭东的博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 04 Jul 2019 09:16:41 +0800</lastBuildDate><atom:link href="https://guoxudong.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Post: 由一封邮件看 Mailing List 在开源项目中的重要性</title><link>https://guoxudong.io/post/kubernetes-client-python/</link><pubDate>Thu, 04 Jul 2019 09:16:41 +0800</pubDate><guid>https://guoxudong.io/post/kubernetes-client-python/</guid><description>
&lt;blockquote>
&lt;p>只要仔细找，想要的轮子总会有的。
&amp;mdash; 某不知名 DevOps 工程师&lt;/p>
&lt;/blockquote>
&lt;p>感谢 &lt;code>kubernetes-dev&lt;/code> 的 Mailing List ！早上在浏览邮件时发现了下面这封有趣的邮件：&lt;/p>
&lt;p>&lt;img src="https://tva2.sinaimg.cn/large/ad5fbf65gy1g4nkmrb8scj21780q0afv.jpg" alt="image">&lt;/p>
&lt;p>接触 Kubernetes 也有不短的时间了，也见证了 Kubernetes 干掉 Swarm 和 Mesos 成为容器编排领域的事实标准的过程。在享受 Kubernetes 及其生态圈带来的便利的同时也在为 Kubernetes 及 CNCF 项目进行贡献。而使用 &lt;a href="https://github.com/kubernetes/kubectl">&lt;code>kubectl&lt;/code>&lt;/a>、&lt;a href="https://github.com/rancher/rancher">&lt;code>rancher&lt;/code>&lt;/a> 甚至是 &lt;a href="https://github.com/IBM/kui">&lt;code>kui&lt;/code>&lt;/a> 这些 CLI 和 UI 工具对 Kubernetes 集群进行操作和观察。&lt;/p>
&lt;p>虽然上面这些工具为操作 Kubernetes 集群带来了极大的便利，但是归根到底还是一些开源项目，并不能满足我们的全部需求。所以我们只能根据我们自己的需求和 Kubernetes 的 api-server 进行定制，但是由于 Kubernetes 的 api-server 比较复杂，短时间内并不是那么好梳理的。&lt;/p>
&lt;h2 id="kubernetes-clientpython">kubernetes-client/python&lt;/h2>
&lt;p>由于我们自研的 DevOps 平台是使用 python 开发的，所以我也基于 python 语言开发了一套 Kubernetes Client ，但总的来说由于 Kubernetes 的功能实在太多，而我的开发实践并不是很多，开发出来的功能只是差强人意。&lt;/p>
&lt;p>而 &lt;a href="https://github.com/kubernetes-client/python">&lt;code>kubernetes-client/python&lt;/code>&lt;/a> 这个官方给出的轮子是真的香！&lt;/p>
&lt;h3 id="安装方便">安装方便&lt;/h3>
&lt;p>这个安装方式简单的令人发指，支持的 python 版本为 &lt;code>2.7 | 3.4 | 3.5 | 3.6 | 3.7&lt;/code> 并且和所有 python 依赖包一样，只需要使用 &lt;code>pip&lt;/code> 安装即可：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">pip install kubernetes
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="简单示例">简单示例&lt;/h3>
&lt;p>查看所有的 pod ：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#999;font-style:italic">#!/usr/bin/env python&lt;/span>
&lt;span style="color:#999;font-style:italic">#encoding: utf-8&lt;/span>
&lt;span style="color:#999;font-style:italic">#Author: guoxudong&lt;/span>
&lt;span style="color:#6ab825;font-weight:bold">from&lt;/span> &lt;span style="color:#447fcf;text-decoration:underline">kubernetes&lt;/span> &lt;span style="color:#6ab825;font-weight:bold">import&lt;/span> client, config
&lt;span style="color:#999;font-style:italic"># Configs can be set in Configuration class directly or using helper utility&lt;/span>
config.load_kube_config()
v1 = client.CoreV1Api()
&lt;span style="color:#6ab825;font-weight:bold">print&lt;/span>(&lt;span style="color:#ed9d13">&amp;#34;Listing pods with their IPs:&amp;#34;&lt;/span>)
ret = v1.list_pod_for_all_namespaces(watch=False)
&lt;span style="color:#6ab825;font-weight:bold">for&lt;/span> i &lt;span style="color:#6ab825;font-weight:bold">in&lt;/span> ret.items:
&lt;span style="color:#6ab825;font-weight:bold">print&lt;/span>(&lt;span style="color:#ed9d13">&amp;#34;&lt;/span>&lt;span style="color:#ed9d13">%s&lt;/span>&lt;span style="color:#ed9d13">\t&lt;/span>&lt;span style="color:#ed9d13">%s&lt;/span>&lt;span style="color:#ed9d13">\t&lt;/span>&lt;span style="color:#ed9d13">%s&lt;/span>&lt;span style="color:#ed9d13">&amp;#34;&lt;/span> % (i.status.pod_ip, i.metadata.namespace, i.metadata.name))
&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行查看结果：&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">Listing pods &lt;span style="color:#6ab825;font-weight:bold">with&lt;/span> their IPs:
&lt;span style="color:#3677a9">172.22&lt;/span>.&lt;span style="color:#3677a9">1.126&lt;/span> kube-system coredns-&lt;span style="color:#3677a9">5975&lt;/span>fdf55b-bqgkx
&lt;span style="color:#3677a9">172.22&lt;/span>.&lt;span style="color:#3677a9">0.2&lt;/span> kube-system coredns-&lt;span style="color:#3677a9">5975&lt;/span>fdf55b-vxbb4
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.13&lt;/span> kube-system flexvolume-&lt;span style="color:#3677a9">9&lt;/span>ccf7
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.15&lt;/span> kube-system flexvolume-h5xn2
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.14&lt;/span> kube-system flexvolume-kvn5x
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.17&lt;/span> kube-system flexvolume-mf4zv
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.14&lt;/span> kube-system kube-proxy-worker-&lt;span style="color:#3677a9">7&lt;/span>lpfz
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.15&lt;/span> kube-system kube-proxy-worker-&lt;span style="color:#3677a9">9&lt;/span>wd9s
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.17&lt;/span> kube-system kube-proxy-worker-phbbj
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.13&lt;/span> kube-system kube-proxy-worker-pst5d
&lt;span style="color:#3677a9">172.22&lt;/span>.&lt;span style="color:#3677a9">1.9&lt;/span> kube-system metrics-server-&lt;span style="color:#3677a9">78&lt;/span>b597d5bf-wdvqh
&lt;span style="color:#3677a9">172.22&lt;/span>.&lt;span style="color:#3677a9">1.12&lt;/span> kube-system nginx-ingress-controller-&lt;span style="color:#3677a9">796&lt;/span>ccc5d76-&lt;span style="color:#3677a9">9j&lt;/span>h5s
&lt;span style="color:#3677a9">172.22&lt;/span>.&lt;span style="color:#3677a9">1.125&lt;/span> kube-system nginx-ingress-controller-&lt;span style="color:#3677a9">796&lt;/span>ccc5d76-jwwwz
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.17&lt;/span> kube-system terway-&lt;span style="color:#3677a9">6&lt;/span>mfs8
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.14&lt;/span> kube-system terway-fz9ck
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.13&lt;/span> kube-system terway-t9777
&lt;span style="color:#3677a9">10.16&lt;/span>.&lt;span style="color:#3677a9">16.15&lt;/span> kube-system terway-xbxlp
&lt;span style="color:#3677a9">172.22&lt;/span>.&lt;span style="color:#3677a9">1.8&lt;/span> kube-system tiller-deploy-&lt;span style="color:#3677a9">5&lt;/span>b5d8dd754-wpcrc
...
&lt;/code>&lt;/pre>&lt;/div>&lt;p>果然是一个好轮子，引入 kubeconfig 的方式及展示所有 namespace 的 pod 的方法封装的也十分简洁，是个非常漂亮的范例。建议可以看一下&lt;a href="https://github.com/kubernetes-client/python">源码&lt;/a>，肯定会有收获的！&lt;/p>
&lt;h3 id="支持版本">支持版本&lt;/h3>
&lt;p>&lt;code>client-python&lt;/code> 遵循 &lt;a href="https://semver.org/lang/zh-CN/">semver&lt;/a> 规范，所以在 &lt;code>client-python&lt;/code> 的主要版本增加之前，代码将继续使用明确支持的 Kubernetes 集群版本。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Kubernetes 1.5&lt;/th>
&lt;th>Kubernetes 1.6&lt;/th>
&lt;th>Kubernetes 1.7&lt;/th>
&lt;th>Kubernetes 1.8&lt;/th>
&lt;th>Kubernetes 1.9&lt;/th>
&lt;th>Kubernetes 1.10&lt;/th>
&lt;th>Kubernetes 1.11&lt;/th>
&lt;th>Kubernetes 1.12&lt;/th>
&lt;th>Kubernetes 1.13&lt;/th>
&lt;th>Kubernetes 1.14&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>client-python 1.0&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 2.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 3.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 4.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 5.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 6.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 7.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 8.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 9.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python 10.0&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>client-python HEAD&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>+&lt;/td>
&lt;td>✓&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="mailing-list-的重要性">Mailing List 的重要性&lt;/h2>
&lt;p>这次的收获很大程度得益于 &lt;code>kubernetes-dev&lt;/code> 的 Mailing List 也就是邮件列表。这种沟通方式在国内不是很流行，大家更喜欢使用 QQ 和微信这样的即时通讯软件进行交流，但是大多数著名开源项目都是主要使用 &lt;strong>Mailing List&lt;/strong> 进行交流，交流的数量甚至比在 GitHub issue 中还多，在与 Apache 、 CNCF 项目开源的贡献者和维护者交流中得知了使用 &lt;strong>Mailing List&lt;/strong> 主要考虑是一下几点：&lt;/p>
&lt;ul>
&lt;li>这种异步的交流方式可以让更多关心该话题的开发人员一起加入到讨论中。&lt;/li>
&lt;li>mailing list 是永久保留的，如果你对某个话题感兴趣，可以随时回复邮件，关注这个话题的开发者都会收到邮件，无论这个话题是昨天提出的，还是去年提出的，有助于解决一些陈年老 BUG （俗称技术债）。&lt;/li>
&lt;li>即时通讯软件虽然很便利，但是问题很快会被评论顶掉，虽然诸如 slack 这样的工具解决了部分这方面的问题，但是还是不如 mailing list 好用。&lt;/li>
&lt;li>并不是所有地区的开发者都有高速的宽带，性能优秀的PC，在地球上很多地区还是只能使用拨号上网，网速只有几kb/s，他们甚至 GitHub issue 都无法使用。但是你不能剥夺他们参与开源项目的权利，而 mailing list 是一种很好的交流方式。&lt;/li>
&lt;li>通过 mailing list 可以很好掌握社区动态，效果明显好于 GitHub watch ，因为并不是项目的所有 commit 都是你关心的。&lt;/li>
&lt;/ul>
&lt;h2 id="结语">结语&lt;/h2>
&lt;p>如果你有志于参与到开源运动，在享受开源软件带来便利的同事，还想为开源软件做出自己的贡献，那么 mailing list 是你进入社区最好的选择。在 mailing list 中和来自世界各地志同道合的开发者交流中提升自己的能力，创造更大的价值，迈出你参与开源运动的第一步。&lt;/p></description></item></channel></rss>